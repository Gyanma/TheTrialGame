package com.mapproject.operations.jframes;

import java.awt.Window;
import javax.swing.JComponent;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;

/*
 * * Based on: Puzzle Zero-Sum Game from the game "Professor Layton and the Unwound Future"
 */
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author gmrut
 */
public class PuzzleZeri extends javax.swing.JFrame {

    /**
     * Creates new form PuzzleZeri
     */
    public PuzzleZeri() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jbColumnA = new javax.swing.JButton();
        jbColumnB = new javax.swing.JButton();
        jtfNorthWest = new javax.swing.JTextField();
        jtfSouthWest = new javax.swing.JTextField();
        jtfNorthEast = new javax.swing.JTextField();
        jtfSouthEast = new javax.swing.JTextField();
        jbRowD = new javax.swing.JButton();
        jbRowC = new javax.swing.JButton();
        jbResa = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Gli Zeri");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jbColumnA.setFont(new java.awt.Font("Monotype Corsiva", 0, 24)); // NOI18N
        jbColumnA.setText("A");
        jbColumnA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jbColumnAMousePressed(evt);
            }
        });

        jbColumnB.setFont(new java.awt.Font("Monotype Corsiva", 0, 24)); // NOI18N
        jbColumnB.setText("B");
        jbColumnB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jbColumnBMousePressed(evt);
            }
        });

        jtfNorthWest.setEditable(false);
        jtfNorthWest.setFont(new java.awt.Font("Monotype Corsiva", 0, 48)); // NOI18N
        jtfNorthWest.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtfNorthWest.setText("6");

        jtfSouthWest.setEditable(false);
        jtfSouthWest.setFont(new java.awt.Font("Monotype Corsiva", 0, 48)); // NOI18N
        jtfSouthWest.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtfSouthWest.setText("9");

        jtfNorthEast.setEditable(false);
        jtfNorthEast.setFont(new java.awt.Font("Monotype Corsiva", 0, 48)); // NOI18N
        jtfNorthEast.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtfNorthEast.setText("4");

        jtfSouthEast.setEditable(false);
        jtfSouthEast.setFont(new java.awt.Font("Monotype Corsiva", 0, 48)); // NOI18N
        jtfSouthEast.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtfSouthEast.setText("7");

        jbRowD.setFont(new java.awt.Font("Monotype Corsiva", 0, 24)); // NOI18N
        jbRowD.setText("D");
        jbRowD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jbRowDMousePressed(evt);
            }
        });

        jbRowC.setFont(new java.awt.Font("Monotype Corsiva", 0, 24)); // NOI18N
        jbRowC.setText("C");
        jbRowC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jbRowCMousePressed(evt);
            }
        });

        jbResa.setFont(new java.awt.Font("Segoe UI Symbol", 0, 18)); // NOI18N
        jbResa.setText("Resa");
        jbResa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jbResaMousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(61, 61, 61)
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING,
                                                                false)
                                                        .addComponent(jtfNorthWest)
                                                        .addComponent(jtfSouthWest,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE, 150,
                                                                Short.MAX_VALUE))
                                                .addGap(155, 155, 155)
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING,
                                                                false)
                                                        .addComponent(jtfNorthEast)
                                                        .addComponent(jtfSouthEast,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE, 150,
                                                                Short.MAX_VALUE)))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(105, 105, 105)
                                                .addComponent(jbColumnA, javax.swing.GroupLayout.PREFERRED_SIZE, 63,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(246, 246, 246)
                                                .addComponent(jbColumnB, javax.swing.GroupLayout.PREFERRED_SIZE, 63,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(106, 106, 106)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jbResa, javax.swing.GroupLayout.PREFERRED_SIZE, 104,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(19, 19, 19)
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jbRowD, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jbRowC, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                63, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(96, 96, 96)));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jbColumnA, javax.swing.GroupLayout.PREFERRED_SIZE, 62,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jbColumnB, javax.swing.GroupLayout.PREFERRED_SIZE, 62,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jbResa, javax.swing.GroupLayout.PREFERRED_SIZE, 82,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(45, 45, 45)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jtfNorthEast, javax.swing.GroupLayout.DEFAULT_SIZE, 150,
                                                        Short.MAX_VALUE)
                                                .addComponent(jbRowC, javax.swing.GroupLayout.PREFERRED_SIZE, 62,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jtfNorthWest, javax.swing.GroupLayout.DEFAULT_SIZE, 150,
                                                Short.MAX_VALUE))
                                .addGap(89, 89, 89)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jtfSouthWest, javax.swing.GroupLayout.DEFAULT_SIZE, 150,
                                                Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jtfSouthEast, javax.swing.GroupLayout.DEFAULT_SIZE, 150,
                                                        Short.MAX_VALUE)
                                                .addComponent(jbRowD, javax.swing.GroupLayout.PREFERRED_SIZE, 62,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(96, 96, 96)));

        pack();
    }// </editor-fold>

    private void formWindowClosing(java.awt.event.WindowEvent evt) {
        System.out.println("La porta rimane serrata...");
    }

    private void jbColumnBMousePressed(java.awt.event.MouseEvent evt) {
        if (SwingUtilities.isLeftMouseButton(evt)) {
            changeNumbersButtonB(jtfNorthEast);
            changeNumbersButtonB(jtfSouthEast);
            checkNumbers(evt);
        }
    }

    private void jbColumnAMousePressed(java.awt.event.MouseEvent evt) {
        if (SwingUtilities.isLeftMouseButton(evt)) {
            changeNumbersButtonA(jtfNorthWest);
            changeNumbersButtonA(jtfSouthWest);
            checkNumbers(evt);
        }
    }

    private void jbRowCMousePressed(java.awt.event.MouseEvent evt) {
        if (SwingUtilities.isLeftMouseButton(evt)) {
            changeNumbersButtonC(jtfNorthWest);
            changeNumbersButtonC(jtfNorthEast);
            checkNumbers(evt);
        }
    }

    private void jbRowDMousePressed(java.awt.event.MouseEvent evt) {
        if (SwingUtilities.isLeftMouseButton(evt)) {
            changeNumbersButtonD(jtfSouthWest);
            changeNumbersButtonD(jtfSouthEast);
            checkNumbers(evt);
        }
    }

    private void jbResaMousePressed(java.awt.event.MouseEvent evt) {
        solved = 0;
        JComponent comp = (JComponent) evt.getSource();
        Window win = SwingUtilities.getWindowAncestor(comp);
        win.dispose();
    }

    private void changeNumbersButtonA(JTextField jtf) {
        switch (jtf.getText()) {
            case "0":
                jtf.setText("5");
                break;
            case "1":
                jtf.setText("6");
                break;
            case "2":
                jtf.setText("7");
                break;
            case "3":
                jtf.setText("8");
                break;
            case "4":
                jtf.setText("9");
                break;
            case "5":
                jtf.setText("0");
                break;
            case "6":
                jtf.setText("1");
                break;
            case "7":
                jtf.setText("2");
                break;
            case "8":
                jtf.setText("3");
                break;
            case "9":
                jtf.setText("4");
                break;
            default:
                break;
        }

    }

    private void changeNumbersButtonB(JTextField jtf) {
        switch (jtf.getText()) {
            case "0":
                jtf.setText("3");
                break;
            case "1":
                jtf.setText("4");
                break;
            case "2":
                jtf.setText("5");
                break;
            case "3":
                jtf.setText("6");
                break;
            case "4":
                jtf.setText("7");
                break;
            case "5":
                jtf.setText("8");
                break;
            case "6":
                jtf.setText("9");
                break;
            case "7":
                jtf.setText("0");
                break;
            case "8":
                jtf.setText("1");
                break;
            case "9":
                jtf.setText("2");
                break;
            default:
                break;
        }

    }

    private void changeNumbersButtonC(JTextField jtf) {
        switch (jtf.getText()) {
            case "0":
                jtf.setText("7");
                break;
            case "1":
                jtf.setText("8");
                break;
            case "2":
                jtf.setText("9");
                break;
            case "3":
                jtf.setText("0");
                break;
            case "4":
                jtf.setText("1");
                break;
            case "5":
                jtf.setText("2");
                break;
            case "6":
                jtf.setText("3");
                break;
            case "7":
                jtf.setText("4");
                break;
            case "8":
                jtf.setText("5");
                break;
            case "9":
                jtf.setText("6");
                break;
            default:
                break;
        }

    }

    private void changeNumbersButtonD(JTextField jtf) {
        switch (jtf.getText()) {
            case "0":
                jtf.setText("4");
                break;
            case "1":
                jtf.setText("5");
                break;
            case "2":
                jtf.setText("6");
                break;
            case "3":
                jtf.setText("7");
                break;
            case "4":
                jtf.setText("8");
                break;
            case "5":
                jtf.setText("9");
                break;
            case "6":
                jtf.setText("0");
                break;
            case "7":
                jtf.setText("1");
                break;
            case "8":
                jtf.setText("2");
                break;
            case "9":
                jtf.setText("3");
                break;
            default:
                break;
        }

    }

    private void checkNumbers(java.awt.event.MouseEvent evt) {
        if (jtfNorthWest.getText().equals("0") &&
                jtfSouthWest.getText().equals("0") &&
                jtfNorthEast.getText().equals("0") &&
                jtfSouthEast.getText().equals("0")) {
            try {
                Thread.sleep(750);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
            solved = 1;
            JComponent comp = (JComponent) evt.getSource();
            Window win = SwingUtilities.getWindowAncestor(comp);
            win.dispose();
        }

    }

    public int getSolved() {
        return solved;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PuzzleZeri.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PuzzleZeri.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PuzzleZeri.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PuzzleZeri.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PuzzleZeri().setVisible(true);
            }
        });
    }

    private int solved = -1;
    // Variables declaration - do not modify
    private javax.swing.JButton jbColumnA;
    private javax.swing.JButton jbColumnB;
    private javax.swing.JButton jbResa;
    private javax.swing.JButton jbRowC;
    private javax.swing.JButton jbRowD;
    private javax.swing.JTextField jtfNorthEast;
    private javax.swing.JTextField jtfNorthWest;
    private javax.swing.JTextField jtfSouthEast;
    private javax.swing.JTextField jtfSouthWest;
    // End of variables declaration
}
